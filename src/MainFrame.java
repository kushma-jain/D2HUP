
import com.algorithms.frequentpatterns.d2hup.AlgoD2HUP;
import com.test.MainTestD2HUP_saveToFile;
import static com.test.MainTestD2HUP_saveToFile.fileToPath;
import java.awt.Color;
import java.awt.Container;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.UnsupportedEncodingException;
import java.net.URL;
import javax.swing.JOptionPane;

import java.io.*;
import java.util.*;
import org.jfree.ui.RefineryUtilities;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author it1230
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        
         Container c = this.getContentPane();

    c.setBackground(Color.pink);
    }
    
    	public static String fileToPath(String filename) throws UnsupportedEncodingException{
		
            URL url = MainTestD2HUP_saveToFile.class.getResource(filename);
                try{
                System.out.println(url.getPath());
                //Runtime r = Runtime.getRuntime();
                //r.exec("notepad "+url.getPath());
                }catch(Exception e){
                    System.out.println(e);
                }
		 return java.net.URLDecoder.decode(url.getPath(),"UTF-8");
	}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        utility = new javax.swing.JTextField();
        runAlgo = new javax.swing.JButton();
        saveToFile = new javax.swing.JButton();
        viewstats = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        result = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        stats = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 255, 204));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 51));
        jLabel1.setText("Mining High Utility Patterns in One Phase using D2HUP");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(199, 20, 602, 25);

        jLabel2.setText("Enter Minimum Utility");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(60, 90, 120, 40);

        utility.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utilityActionPerformed(evt);
            }
        });
        getContentPane().add(utility);
        utility.setBounds(189, 88, 140, 40);

        runAlgo.setBackground(new java.awt.Color(255, 255, 255));
        runAlgo.setText("Run Algorithm");
        runAlgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runAlgoActionPerformed(evt);
            }
        });
        getContentPane().add(runAlgo);
        runAlgo.setBounds(80, 160, 130, 30);

        saveToFile.setText("SaveToFile");
        saveToFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveToFileActionPerformed(evt);
            }
        });
        getContentPane().add(saveToFile);
        saveToFile.setBounds(440, 140, 120, 30);

        viewstats.setText("View Status");
        viewstats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewstatsActionPerformed(evt);
            }
        });
        getContentPane().add(viewstats);
        viewstats.setBounds(706, 123, 120, 30);

        result.setColumns(20);
        result.setRows(5);
        jScrollPane1.setViewportView(result);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(80, 220, 369, 269);

        stats.setEditable(false);
        stats.setColumns(20);
        stats.setRows(5);
        jScrollPane2.setViewportView(stats);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(471, 183, 355, 320);
        getContentPane().add(jLabel6);
        jLabel6.setBounds(40, 0, 830, 330);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void runAlgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runAlgoActionPerformed
        
       try
       {
            int minutility = Integer.parseInt(utility.getText());
      
            
            if(minutility ==0){
                JOptionPane.showMessageDialog(null, "funds cannot be 0");
            }
            else{
            String input = fileToPath("DB_Utility.txt");            
		
            String output = ".//output.txt";  
	
		AlgoD2HUP algo = new AlgoD2HUP();
		algo.runAlgorithm(input, output, minutility);
                
        BufferedReader in = new BufferedReader(new FileReader(output));

        String line=null;
        
                String data = "";
        
            while((line = in.readLine()) != null)
            {
                result.setText(data+=line+"\n");
            }
                in.close();
        
                
	
                
                
                //
                ArrayList<String> pattern = new ArrayList<String>();
                ArrayList<Integer> utilityResult = new ArrayList<Integer>();
                
                pattern.clear();
                utilityResult.clear();
                
                FileInputStream fis = new FileInputStream("output.txt");
                byte bb[] = new byte[fis.available()];
                fis.read(bb);
                fis.close();
                String dataResult = new String(bb);
                dataResult = dataResult.trim();
                StringTokenizer st = new StringTokenizer(dataResult,"\r\n");
                while(st.hasMoreTokens()){
                    String token = st.nextToken();
                    String patternFinal = token.substring(0,token.lastIndexOf("#"));
                    patternFinal = patternFinal.trim();
                    pattern.add(patternFinal);
                    
                    int frequency = Integer.parseInt(token.substring(token.lastIndexOf(":")+2, token.length()));
                    utilityResult.add(frequency);
                }
                //System.out.println(pattern);
                //System.out.println(utilityResult);
                
                final Barchart demo = new Barchart("====MINING HIGH UTILITY=====",pattern,utilityResult);
                demo.pack();
                RefineryUtilities.centerFrameOnScreen(demo);
                demo.setVisible(true);
                
            }  
                
                //
                
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }

        
        
        
    }//GEN-LAST:event_runAlgoActionPerformed

    private void saveToFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveToFileActionPerformed

        try
        {
                
                
                    int minutility = Integer.parseInt(utility.getText());
      
                String input = fileToPath("DB_Utility.txt");            
		
                String output = ".//output.txt";  
	
		AlgoD2HUP algo = new AlgoD2HUP();
		algo.runAlgorithm(input, output, minutility);
                
                JOptionPane.showMessageDialog(this, "Saved To File successfully...");
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_saveToFileActionPerformed

    private void viewstatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewstatsActionPerformed
        
        try
        {
                int minutility = Integer.parseInt(utility.getText());
      
                
                if(minutility == 0){
                    JOptionPane.showMessageDialog(null, "you cannot go a head with 0 funds...!");
                }
                else{
                
                String input = fileToPath("DB_Utility.txt");            
		
                String output = "F://output.txt";  
	
		AlgoD2HUP algo = new AlgoD2HUP();
		algo.runAlgorithm(input, output, minutility);
                
                String result = algo.printStats();
                
                stats.setText(result);
                }
               
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
        
    }//GEN-LAST:event_viewstatsActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentShown

    private void utilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utilityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_utilityActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea result;
    private javax.swing.JButton runAlgo;
    private javax.swing.JButton saveToFile;
    private javax.swing.JTextArea stats;
    private javax.swing.JTextField utility;
    private javax.swing.JButton viewstats;
    // End of variables declaration//GEN-END:variables
}


